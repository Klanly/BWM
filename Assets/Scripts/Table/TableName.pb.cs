//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: TableName.proto
namespace table
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"TableName")]
  public partial class TableName : global::ProtoBuf.IExtensible
  {
    public TableName() {}
    
    private uint _id;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint id
    {
      get { return _id; }
      set { _id = value; }
    }
    private string _name1;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"name1", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string name1
    {
      get { return _name1; }
      set { _name1 = value; }
    }
    private string _name2;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"name2", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string name2
    {
      get { return _name2; }
      set { _name2 = value; }
    }
    private string _name3;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"name3", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string name3
    {
      get { return _name3; }
      set { _name3 = value; }
    }
    private string _name4;
    [global::ProtoBuf.ProtoMember(5, IsRequired = true, Name=@"name4", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string name4
    {
      get { return _name4; }
      set { _name4 = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}